<?php

$_DB = null;

function db(): Database
{
	global $_DB;
	if (!$_DB) {
		$_DB = new Database();
	}
	return $_DB;
}

class Database
{
	public $pdo = null;

	function connect(array $settings)
	{
		$dsn = sprintf(
			"mysql:host=%s;port=%s;dbname=%s;charset=%s",
			$settings["host"],
			$settings["port"],
			$settings["database"],
			$settings["charset"]
		);
		$this->pdo = new Pdo($dsn, $settings["username"], $settings["password"], $settings["options"]);
	}

	public function execute(string $query, array $params = []): PdoStatement
	{
		$statement = $this->pdo->prepare($query);
		if (!$statement->execute($params)) {
			throw new Exception();
		}
		return $statement;
	}

	public function insert(string $query, array $params = []): null|string
	{
		$this->execute($query, $params);
		$id = $this->pdo->lastInsertId();
		return $id ? $id : null;
	}

	public function rows(string $query, array $params = []): array
	{
		$statement = $this->execute($query, $params);
		return $statement->fetchAll(Pdo::FETCH_ASSOC);
	}

	public function row(string $query, array $params = []): null|array
	{
		$rows = $this->rows($query, $params);
		return $rows ? $rows[0] : null;
	}

	public function column(string $query, array $params = []): array
	{
		$statement = $this->execute($query, $params);
		$rows = $statement->fetchAll(Pdo::FETCH_NUM);
		return array_map(function ($row) {
			return $row[0];
		}, $rows);
	}

	public function value(string $query, array $params = []): mixed
	{
		$column = $this->column($query, $params);
		return $column ? $column[0] : null;
	}

	public function update(string $query, array $params = []): int
	{
		$statement = $this->execute($query, $params);
		return $statement->rowCount();
	}

	public function delete(string $query, array $params = []): int
	{
		$statement = $this->execute($query, $params);
		return $statement->rowCount();
	}
}

db()->connect([
	"host" => $_ENV["DATABASE_HOST"],
	"port" => $_ENV["DATABASE_PORT"],
	"database" => $_ENV["DATABASE_DATABASE"],
	"charset" => $_ENV["DATABASE_CHARSET"],
	"username" => $_ENV["DATABASE_USERNAME"],
	"password" => $_ENV["DATABASE_PASSWORD"],
	"options" => [
		Pdo::ATTR_ERRMODE => Pdo::ERRMODE_EXCEPTION,
		Pdo::ATTR_EMULATE_PREPARES => false
	]
]);